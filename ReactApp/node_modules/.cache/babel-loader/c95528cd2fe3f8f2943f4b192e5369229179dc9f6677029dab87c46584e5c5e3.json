{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var BirthdayResult=function BirthdayResult(_ref){var calendarValues=_ref.calendarValues;var day=calendarValues.day;var month=calendarValues.month;var year=calendarValues.year;var cleanSharedDay=function cleanSharedDay(day){if(day.length>1&&day[0]==='0'){return day.slice(1);}return day;};var cleanSharedMonth=function cleanSharedMonth(month){if(month.length>1&&month[0]==='0'){var correctedMonth=parseInt(month.slice(1))-1;return correctedMonth;}month=parseInt(month)-1;return month;};var calculateTimeDifference=function calculateTimeDifference(month,day,year){var birthday=new Date(year,cleanSharedMonth(month),cleanSharedDay(day));var currentDate=new Date();var timeDifference=currentDate-birthday;return timeDifference;};var timeDifference=calculateTimeDifference(month,day,year);var years=Math.floor(timeDifference/(1000*60*60*24*365.25));var months=Math.floor(timeDifference%(1000*60*60*24*365.25)/(1000*60*60*24*30.44));var days=Math.floor(timeDifference%(1000*60*60*24*30.44)/(1000*60*60*24));return/*#__PURE__*/_jsxs(\"div\",{className:\"birthday-result-container\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"years\",children:[year===\"\"?\"--\":years,\" \",/*#__PURE__*/_jsx(\"span\",{className:\"calendrical\",children:\"years\"})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"months\",children:[month===\"\"?\"--\":months,\" \",/*#__PURE__*/_jsx(\"span\",{className:\"calendrical\",children:\"months\"})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"days\",children:[day===\"\"?\"--\":days,\" \",/*#__PURE__*/_jsx(\"span\",{className:\"calendrical\",children:\"days\"})]})]});};export default BirthdayResult;","map":{"version":3,"names":["BirthdayResult","_ref","calendarValues","day","month","year","cleanSharedDay","length","slice","cleanSharedMonth","correctedMonth","parseInt","calculateTimeDifference","birthday","Date","currentDate","timeDifference","years","Math","floor","months","days","_jsxs","className","children","_jsx"],"sources":["/Users/eric/Documents/Github/age-calculator-app/src/components/BirthdayResult.js"],"sourcesContent":["const BirthdayResult = ({calendarValues}) => {\n\n  const day = calendarValues.day\n  const month = calendarValues.month\n  const year = calendarValues.year\n\n  const cleanSharedDay = (day) => {\n    if (day.length > 1 && day[0] === '0') {\n      return day.slice(1);\n    }\n    return day;\n  };\n  \n  const cleanSharedMonth = (month) => {\n    if (month.length > 1 && month[0] === '0') {\n      const correctedMonth = parseInt(month.slice(1)) - 1\n      return correctedMonth;\n    }\n    month = parseInt(month) - 1\n    return month;\n  };\n\n  const calculateTimeDifference = (month, day, year) => {\n    const birthday = new Date(year, cleanSharedMonth(month), cleanSharedDay(day)); \n    const currentDate = new Date();\n    const timeDifference = currentDate - birthday;\n\n    return timeDifference\n  }\n\n  const timeDifference = calculateTimeDifference(month,day,year)\n  \n  const years = Math.floor(timeDifference / (1000 * 60 * 60 * 24 * 365.25));\n  const months = Math.floor((timeDifference % (1000 * 60 * 60 * 24 * 365.25)) / (1000 * 60 * 60 * 24 * 30.44));\n  const days = Math.floor((timeDifference % (1000 * 60 * 60 * 24 * 30.44) / (1000 * 60 * 60 * 24)));\n\n  return (\n    <div className=\"birthday-result-container\">\n      <p className=\"years\">{ year === \"\" ? \"--\" : years} <span className=\"calendrical\">years</span></p>\n      <p className=\"months\">{ month === \"\" ? \"--\" : months} <span className=\"calendrical\">months</span></p>\n      <p className=\"days\">{ day === \"\" ? \"--\" : days} <span className=\"calendrical\">days</span></p>\n    </div>\n  );\n};\n\nexport default BirthdayResult;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}